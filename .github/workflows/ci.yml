name: CI
'on':
  push:
    tags:
      - v160.*
jobs:
  build-windows:
    runs-on: windows-2022
    env:
      LLVM_SYS_160_PREFIX: 'D:\a\llvm'
      LLVM_ARCHIVE_PATH: 'D:\a\llvm-libs-16.0.3-msvc'
    name: Build for x86_64 Windows 2022
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Enable Developer Command Prompt
        uses: ilammy/msvc-dev-cmd@cec98b9d092141f74527d0afa6feb2af698cfe89
      - name: Cache LLVM
        id: cache-llvm
        uses: actions/cache@v3
        with:
          path: '${{env.LLVM_SYS_160_PREFIX}}'
          key: llvm-libs-16.0.3-msvc
      - name: Download LLVM
        if: steps.cache-llvm.outputs.cache-hit != 'true'
        run: >
          iwr
          https://github.com/llvm/llvm-project/releases/download/llvmorg-16.0.3/llvm-16.0.3.src.tar.xz
          -OutFile llvm.tar.xz

          (Get-FileHash -Algorithm SHA256 .\llvm.tar.xz).hash -eq
          "D820E63BC3A6F4F833EC69A1EF49A2E81992E90BC23989F98946914B061AB6C7"

          7z x llvm.tar.xz

          7z x llvm.tar

          mv llvm-* llvm-src
      - name: Download LLVM's CMake files
        if: steps.cache-llvm.outputs.cache-hit != 'true'
        run: >
          iwr
          https://github.com/llvm/llvm-project/releases/download/llvmorg-16.0.3/cmake-16.0.3.src.tar.xz
          -OutFile cmake.tar.xz

          (Get-FileHash -Algorithm SHA256 .\cmake.tar.xz).hash -eq
          "B6D83C91F12757030D8361DEDC5DD84357B3EDB8DA406B5D0850DF8B6F7798B1"

            7z x cmake.tar.xz

            7z x cmake.tar
              mv cmake-* cmake
      - name: Build LLVM
        if: steps.cache-llvm.outputs.cache-hit != 'true'
        working-directory: ./llvm-src
        run: >
          cmake . -Thost=x64 -DLLVM_TARGETS_TO_BUILD="X86;AArch64"
          -DLLVM_USE_CRT_RELEASE=MT -DBUILD_SHARED_LIBS=OFF
          -DCMAKE_FIND_USE_SYSTEM_ENVIRONMENT_PATH=OFF
          -DLLVM_INCLUDE_BENCHMARKS=OFF -DLLVM_INCLUDE_TESTS=OFF
          -DLLVM_ENABLE_ZSTD=OFF

          cmake --build . --config Release

          cmake -DCMAKE_INSTALL_PREFIX=${{env.LLVM_SYS_160_PREFIX}} -P
          cmake_install.cmake
      - name: Zip LLVM build
        run: |
          Compress-Archive -Path "${{env.LLVM_SYS_160_PREFIX}}" -DestinationPath "${{env.LLVM_ARCHIVE_PATH}}"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: '${{env.LLVM_ARCHIVE_PATH}}.zip'
          asset_name: llvm-libs-16.0.3-msvc.zip
          asset_content_type: application/zip
          